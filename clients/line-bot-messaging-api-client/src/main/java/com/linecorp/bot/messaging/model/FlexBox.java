/*
 * Copyright 2023 LINE Corporation
 *
 * LINE Corporation licenses this file to you under the Apache License,
 * version 2.0 (the "License"); you may not use this file except in compliance
 * with the License. You may obtain a copy of the License at:
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
 * License for the specific language governing permissions and limitations
 * under the License.
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.linecorp.bot.messaging.model;

import java.time.Instant;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;

import javax.annotation.Nonnull;
import javax.annotation.Nullable;

import com.fasterxml.jackson.annotation.JsonEnumDefaultValue;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSubTypes;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;

import com.linecorp.bot.messaging.model.Action;
import com.linecorp.bot.messaging.model.FlexBoxBackground;
import com.linecorp.bot.messaging.model.FlexComponent;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;


/**
 * FlexBox
 */
@JsonTypeName("box")

@JsonInclude(Include.NON_NULL)
@javax.annotation.Generated(value = "com.linecorp.bot.codegen.LineJavaCodegenGenerator")
public record FlexBox (
/**
    * Get layout
    */
    
    @Nonnull
    @JsonProperty("layout")
    Layout layout,
/**
    * Get flex
    */
    
    @Nullable
    @JsonProperty("flex")
    Integer flex,
/**
    * Get contents
    */
    
    @Nonnull
    @JsonProperty("contents")
    List<FlexComponent> contents,
/**
    * Get spacing
    */
    
    @Nullable
    @JsonProperty("spacing")
    String spacing,
/**
    * Get margin
    */
    
    @Nullable
    @JsonProperty("margin")
    String margin,
/**
    * Get position
    */
    
    @Nullable
    @JsonProperty("position")
    Position position,
/**
    * Get offsetTop
    */
    
    @Nullable
    @JsonProperty("offsetTop")
    String offsetTop,
/**
    * Get offsetBottom
    */
    
    @Nullable
    @JsonProperty("offsetBottom")
    String offsetBottom,
/**
    * Get offsetStart
    */
    
    @Nullable
    @JsonProperty("offsetStart")
    String offsetStart,
/**
    * Get offsetEnd
    */
    
    @Nullable
    @JsonProperty("offsetEnd")
    String offsetEnd,
/**
    * Get backgroundColor
    */
    
    @Nullable
    @JsonProperty("backgroundColor")
    String backgroundColor,
/**
    * Get borderColor
    */
    
    @Nullable
    @JsonProperty("borderColor")
    String borderColor,
/**
    * Get borderWidth
    */
    
    @Nullable
    @JsonProperty("borderWidth")
    String borderWidth,
/**
    * Get cornerRadius
    */
    
    @Nullable
    @JsonProperty("cornerRadius")
    String cornerRadius,
/**
    * Get width
    */
    
    @Nullable
    @JsonProperty("width")
    String width,
/**
    * Get maxWidth
    */
    
    @Nullable
    @JsonProperty("maxWidth")
    String maxWidth,
/**
    * Get height
    */
    
    @Nullable
    @JsonProperty("height")
    String height,
/**
    * Get maxHeight
    */
    
    @Nullable
    @JsonProperty("maxHeight")
    String maxHeight,
/**
    * Get paddingAll
    */
    
    @Nullable
    @JsonProperty("paddingAll")
    String paddingAll,
/**
    * Get paddingTop
    */
    
    @Nullable
    @JsonProperty("paddingTop")
    String paddingTop,
/**
    * Get paddingBottom
    */
    
    @Nullable
    @JsonProperty("paddingBottom")
    String paddingBottom,
/**
    * Get paddingStart
    */
    
    @Nullable
    @JsonProperty("paddingStart")
    String paddingStart,
/**
    * Get paddingEnd
    */
    
    @Nullable
    @JsonProperty("paddingEnd")
    String paddingEnd,
/**
    * Get action
    */
    
    @Nullable
    @JsonProperty("action")
    Action action,
/**
    * Get justifyContent
    */
    
    @Nullable
    @JsonProperty("justifyContent")
    JustifyContent justifyContent,
/**
    * Get alignItems
    */
    
    @Nullable
    @JsonProperty("alignItems")
    AlignItems alignItems,
/**
    * Get background
    */
    
    @Nullable
    @JsonProperty("background")
    FlexBoxBackground background

) implements FlexComponent {
/**
     * Gets or Sets layout
     */
    public enum Layout {
@JsonProperty("horizontal")
      HORIZONTAL,
    @JsonProperty("vertical")
      VERTICAL,
    @JsonProperty("baseline")
      BASELINE,
    

      @JsonEnumDefaultValue
      UNDEFINED;
    }
/**
     * Gets or Sets position
     */
    public enum Position {
@JsonProperty("relative")
      RELATIVE,
    @JsonProperty("absolute")
      ABSOLUTE,
    

      @JsonEnumDefaultValue
      UNDEFINED;
    }
/**
     * Gets or Sets justifyContent
     */
    public enum JustifyContent {
@JsonProperty("center")
      CENTER,
    @JsonProperty("flex-start")
      FLEX_START,
    @JsonProperty("flex-end")
      FLEX_END,
    @JsonProperty("space-between")
      SPACE_BETWEEN,
    @JsonProperty("space-around")
      SPACE_AROUND,
    @JsonProperty("space-evenly")
      SPACE_EVENLY,
    

      @JsonEnumDefaultValue
      UNDEFINED;
    }
/**
     * Gets or Sets alignItems
     */
    public enum AlignItems {
@JsonProperty("center")
      CENTER,
    @JsonProperty("flex-start")
      FLEX_START,
    @JsonProperty("flex-end")
      FLEX_END,
    

      @JsonEnumDefaultValue
      UNDEFINED;
    }


}
